const { name } = require('../../config/pkg.json');

try {
    require('mongoose');
} catch (err) {
    throw new Error(`[${name}: NODEJS_PACKAGE_ERROR] mongoose package is not installed, run in the terminal this command: npm i mongoose`);
};

const mongoose = require('mongoose');

module.exports = function connectMongoDB(URI, logMessageWhenConnected = false, logMessage = `[${name}: MONGODB_CONNECTED] Successfully connected to MongoDB.`) {
    if (!URI) throw new Error(`[${name}: MISSING_PARAMETER] The parameter 'URI' is required to provide.`);

    if (typeof URI !== "string") throw new TypeError(`[${name}: INVALID_TYPE] 'URI' parameter is not a String.`);

    mongoose.connect(URI, {
        useNewUrlParser: true,
        useUnifiedTopology: true
    }).catch((err) => console.log(`[${name}: MONGODB_ERROR] Couldn't connect to MongoDB, error:\n> ${err}`))

    if (logMessageWhenConnected) {
        if (typeof logMessageWhenConnected !== "boolean") throw new TypeError(`[${name}: INVALID_TYPE] 'logMessageWhenConnected' parameter is not a Boolean.`);

        if (logMessage) {
            if (typeof logMessage !== "string") throw new TypeError(`[${name}: INVALID_TYPE] 'logMessage' parameter is not a String.`);
        };

        if (logMessageWhenConnected === true) {
            mongoose.connection.once("open", () => {
                console.log(logMessage);
            })
        }
    };
};